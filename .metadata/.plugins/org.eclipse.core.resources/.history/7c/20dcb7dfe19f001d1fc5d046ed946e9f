package com.exam;

import java.util.HashSet;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import com.exam.model.Role;
import com.exam.model.User;
import com.exam.model.UserRole;
import com.exam.service.UserService;

@SpringBootApplication
public class ExamserverApplication implements CommandLineRunner {

	@Autowired
	private BCryptPasswordEncoder bCryptPasswordEncoder;
	
	@Autowired
	private UserService userService;

	public static void main(String[] args) {
		SpringApplication.run(ExamserverApplication.class, args);
	}

	@Override
	public void run(String... args) throws Exception {
		System.out.println("Starting code");
/*
		User user = new User();
		user.setFirstName("Devendra");
		user.setLastName("Patel");
		user.setUsername("devendra17");
		user.setPassword("12345");
		user.setEmail("deva@gmail.com");
		user.setPhone("98981234");
		user.setProfile("default.png");

		Role role1 = new Role();
		role1.setRoleId(41L);
		role1.setRoleName("ADMIN");

		Set<UserRole> userRoleSet = new HashSet<>();
		UserRole userRole = new UserRole();
		userRole.setRole(role1);
		userRole.setUser(user);

		userRoleSet.add(userRole);

		User user1 = this.userService.createUser(user, userRoleSet);
		System.out.println(user1.getUsername());
*/		
		
		User user = new User();
		user.setFirstName("Samir");
		user.setLastName("Kumar");
		user.setUsername("samir17");
		user.setPassword(this.bCryptPasswordEncoder.encode("abc"));
		user.setEmail("samir@gmail.com");
		user.setPhone("98981234");
		user.setProfile("default.png");

		Role role1 = new Role();
		role1.setRoleId(12L);
		role1.setRoleName("NORMAL");

		Set<UserRole> userRoleSet = new HashSet<>();
		UserRole userRole = new UserRole();
		userRole.setRole(role1);
		userRole.setUser(user);

		userRoleSet.add(userRole);

		User user1 = this.userService.createUser(user, userRoleSet);
		System.out.println(user1.getUsername());
		
	}

}
